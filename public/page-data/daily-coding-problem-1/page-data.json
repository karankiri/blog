{"componentChunkName":"component---src-templates-blog-post-js","path":"/daily-coding-problem-1/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Karan Kiri's Blog","author":"Karan Kiri"}},"markdownRemark":{"id":"d5aa353f-6c2a-5bd1-808f-0f9c0518201e","excerpt":"This problem was recently asked by Google. Given a list of numbers and a number k, return whether any two numbers from the list add up to k. For example, given…","html":"<p>This problem was recently asked by Google.</p>\n<p>Given a list of numbers and a number k, return whether any two numbers from the list add up to k.</p>\n<p>For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.</p>\n<p>Bonus: Can you do this in one pass?</p>\n<h3>Solution 1</h3>\n<p>We can iterate over the list in the loop and check if two element add up to k.\nHowever time complexity for the solution will be O(n<sup>2</sup>)\n<div id=\"gist102063109\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-solution1-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-solution1-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-solution1-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>def</span> <span class=pl-v>TwoNumbersEqual</span>(<span class=pl-s1>list</span>, <span class=pl-s1>value</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-solution1-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>is_sum_exist</span> <span class=pl-c1>=</span> <span class=pl-c1>False</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-solution1-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span> <span class=pl-s1>i</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-solution1-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>for</span> <span class=pl-s1>j</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-solution1-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-k>if</span>(<span class=pl-s1>list</span>[<span class=pl-s1>i</span>] <span class=pl-c1>+</span> <span class=pl-s1>list</span>[<span class=pl-s1>j</span>] <span class=pl-c1>==</span> <span class=pl-s1>value</span> <span class=pl-c1>and</span> <span class=pl-s1>i</span> <span class=pl-c1>!=</span> <span class=pl-s1>j</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-solution1-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>is_sum_exist</span> <span class=pl-c1>=</span> <span class=pl-c1>True</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-solution1-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-solution1-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>return</span> <span class=pl-s1>is_sum_exist</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/karankiri/b12688dc15b4a30e29f27095b0acf71d/raw/2399eea9f4a951b42b020b84cfae8fc87515515b/Solution1.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/karankiri/b12688dc15b4a30e29f27095b0acf71d#file-solution1-py\">Solution1.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Solution 2</h3>\n<p>I wanted to do the bonus part. So we can check this condition in one pass. What we’ll do is\nuse the hashset to store the visited elements as lookup time for hashset is constant (O(1)).\nWe’ll check if the substraction of the sum and current item is present in hash if it’s present we can say that the sum exist.\n<div id=\"gist102063366\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-dcpsolution1optimized-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>def</span> <span class=pl-v>TwoNumbersEqual</span>(<span class=pl-s1>list</span>, <span class=pl-s1>value</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>is_sum_exist</span> <span class=pl-c1>=</span> <span class=pl-c1>False</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>hashSet</span> <span class=pl-c1>=</span> <span class=pl-en>set</span>()</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span> <span class=pl-s1>item</span> <span class=pl-c1>in</span> <span class=pl-s1>list</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>if</span> <span class=pl-s1>value</span><span class=pl-c1>-</span><span class=pl-s1>item</span> <span class=pl-c1>in</span> <span class=pl-s1>hashSet</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-s1>is_sum_exist</span> <span class=pl-c1>=</span> <span class=pl-c1>True</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-s1>hashSet</span>.<span class=pl-en>add</span>(<span class=pl-s1>item</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution1optimized-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-dcpsolution1optimized-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>return</span> <span class=pl-s1>is_sum_exist</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/karankiri/0823aa34fc8ae985cfd28c72da646184/raw/902c02080d31d8223978b6437fbb838c227f96eb/DCPSolution1Optimized.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/karankiri/0823aa34fc8ae985cfd28c72da646184#file-dcpsolution1optimized-py\">DCPSolution1Optimized.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Github repository</h3>\n<p>Here is the github repository <a href=\"https://github.com/karankiri/DailyCodingProblem\">link</a></p>\n<p>Thank you</p>","frontmatter":{"title":"Daily Coding Problem: Problem #1 [Easy]","date":"March 29, 2020","description":"This blog is part of the daily coding problem where I will be sharing solution of one problem everday."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/daily-coding-problem-1/","previous":null,"next":{"fields":{"slug":"/daily-coding-problem-2/"},"frontmatter":{"title":"Daily Coding Problem: Problem #2 [Hard]"}}}}}