{"componentChunkName":"component---src-templates-blog-post-js","path":"/daily-coding-problem-2/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Karan Kiri's Blog","author":"Karan Kiri"}},"markdownRemark":{"id":"36753023-e390-5ad6-807c-69e22bcb5cfb","excerpt":"This problem was asked by Uber. Given an array of integers, return a new array such that each element at index i of the new array is the product of all theâ€¦","html":"<p>This problem was asked by Uber.</p>\n<p>Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.</p>\n<p>For example, if our input was <code class=\"language-text\">[1, 2, 3, 4, 5]</code>, the expected output would be <code class=\"language-text\">[120, 60, 40, 30, 24]</code>. If our input was <code class=\"language-text\">[3, 2, 1]</code>, the expected output would be <code class=\"language-text\">[2, 3, 6]</code>.</p>\n<p>Follow-up: what if you canâ€™t use division?</p>\n<h3>Solution 1</h3>\n<p>We can iterate over the list in the loop and calculate the multiplication for every element.\nHowever time complexity for the solution will be O(n<sup>2</sup>).\n<div id=\"gist102065576\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-dcpsolution2-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-dcpsolution2-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>def</span> <span class=pl-v>ArrayMultiplication</span>(<span class=pl-s1>list</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-dcpsolution2-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>resultList</span> <span class=pl-c1>=</span> []</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-dcpsolution2-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span> <span class=pl-s1>i</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-dcpsolution2-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-s1>multiplication</span> <span class=pl-c1>=</span> <span class=pl-c1>1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-dcpsolution2-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>for</span> <span class=pl-s1>j</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-dcpsolution2-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-k>if</span> <span class=pl-s1>i</span><span class=pl-c1>!=</span><span class=pl-s1>j</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-dcpsolution2-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>multiplication</span> <span class=pl-c1>=</span> <span class=pl-s1>multiplication</span> <span class=pl-c1>*</span> <span class=pl-s1>list</span>[<span class=pl-s1>j</span>]</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-dcpsolution2-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-s1>resultList</span>.<span class=pl-en>append</span>(<span class=pl-s1>multiplication</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-dcpsolution2-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>return</span> <span class=pl-s1>resultList</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/karankiri/2684cb0054b12c78429d0acf1e3dd489/raw/078be194e52d047d300b19eb69de9ff0de58e85f/DCPSolution2.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/karankiri/2684cb0054b12c78429d0acf1e3dd489#file-dcpsolution2-py\">DCPSolution2.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Solution 2</h3>\n<p>We can use the divison formula to get the multiplication for every element in one pass. Here is what we can do.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def ArrayMultiplication(list):\n  multiplication = 1\n  for item in list:\n    multiplication = item * multiplication\n  for i in range(len(list)):\n    list[i] = multiplication / list[i]\n  return list</code></pre></div>\n<p>You may think this is the correct answer but it isnâ€™t. This code will throw runtime error when there will be atleast one zero in the list. (You know the dreaded divide by zero error ðŸ˜ž ).</p>\n<p>So think about the edge cases.</p>\n<p>Here are the three test cases.</p>\n<ol>\n<li>List without zero</li>\n<li>List with one zero</li>\n<li>List with more than one zero</li>\n</ol>\n<p>For case one we can use the above algorithm and for case 3 resultant list will have all zero. (think about it)</p>\n<p>For test case 2, all resultant elements will be zero except the i<sup>th</sup>(i is index of zero)</p>\n<p>The i<sup>th</sup> index will have mulitplication of all other elements.</p>\n<p>We can write the solution as follows.</p>\n<p><div id=\"gist102065611\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-dcpsolution2optimized-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>def</span> <span class=pl-v>ArrayMultiplication</span>(<span class=pl-s1>list</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>multiplication</span> <span class=pl-c1>=</span> <span class=pl-c1>1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>multiplicationWithoutZero</span> <span class=pl-c1>=</span> <span class=pl-c1>1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>zeroCount</span> <span class=pl-c1>=</span> <span class=pl-c1>0</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span> <span class=pl-s1>item</span> <span class=pl-c1>in</span> <span class=pl-s1>list</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>if</span> <span class=pl-s1>item</span> <span class=pl-c1>==</span> <span class=pl-c1>0</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-s1>zeroCount</span> <span class=pl-c1>=</span> <span class=pl-s1>zeroCount</span> <span class=pl-c1>+</span> <span class=pl-c1>1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>else</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-s1>multiplicationWithoutZero</span> <span class=pl-c1>=</span> <span class=pl-s1>item</span> <span class=pl-c1>*</span> <span class=pl-s1>multiplicationWithoutZero</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-s1>multiplication</span> <span class=pl-c1>=</span> <span class=pl-s1>item</span> <span class=pl-c1>*</span> <span class=pl-s1>multiplication</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>if</span> <span class=pl-s1>zeroCount</span> <span class=pl-c1>&gt;</span> <span class=pl-c1>1</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC12\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>return</span> [<span class=pl-c1>0</span>] <span class=pl-c1>*</span> <span class=pl-en>len</span>(<span class=pl-s1>list</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>elif</span> <span class=pl-s1>zeroCount</span> <span class=pl-c1>==</span> <span class=pl-c1>1</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>for</span> <span class=pl-s1>i</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC15\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-k>if</span>(<span class=pl-s1>list</span>[<span class=pl-s1>i</span>] <span class=pl-c1>==</span> <span class=pl-c1>0</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC16\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>list</span>[<span class=pl-s1>i</span>] <span class=pl-c1>=</span> <span class=pl-s1>multiplicationWithoutZero</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-k>else</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC18\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>list</span>[<span class=pl-s1>i</span>] <span class=pl-c1>=</span> <span class=pl-c1>0</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>else</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>for</span> <span class=pl-s1>i</span> <span class=pl-c1>in</span> <span class=pl-en>range</span>(<span class=pl-en>len</span>(<span class=pl-s1>list</span>)):</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-s1>list</span>[<span class=pl-s1>i</span>] <span class=pl-c1>=</span> <span class=pl-s1>multiplication</span> <span class=pl-c1>/</span> <span class=pl-s1>list</span>[<span class=pl-s1>i</span>]</td>\n      </tr>\n      <tr>\n        <td id=\"file-dcpsolution2optimized-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-dcpsolution2optimized-py-LC22\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>return</span> <span class=pl-s1>list</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/karankiri/0bb76cce75637b7b6272e110ec9a1c7f/raw/824b05e3ab9a4add4e439142999c9e628db0f7c4/DCPSolution2Optimized.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/karankiri/0bb76cce75637b7b6272e110ec9a1c7f#file-dcpsolution2optimized-py\">DCPSolution2Optimized.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Github repository</h3>\n<p>Here is the github repository <a href=\"https://github.com/karankiri/DailyCodingProblem\">link</a></p>\n<p>Thank you</p>","frontmatter":{"title":"Daily Coding Problem: Problem #2 [Hard]","date":"March 30, 2020","description":"This blog is part of the daily coding problem where I will be sharing solution of one problem in python everday."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/daily-coding-problem-2/","previous":{"fields":{"slug":"/daily-coding-problem-1/"},"frontmatter":{"title":"Daily Coding Problem: Problem #1 [Easy]"}},"next":{"fields":{"slug":"/30-day-leetcoding-challenge-day-1/"},"frontmatter":{"title":"30-Day LeetCoding Challenge #Day1"}}}}}